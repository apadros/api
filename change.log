v0.3.0
	- Array
		- Added GetArrayLength()
		
	- Error
		- Added AssertRetType() and updated all required code previously using AssertRet()

	- Logging
		- Added OpenLogFile(), Log() and CloseLogFile()
		
	- Maths
		- Added Min(), Max() and Magnitude()
		
	- String
		- Added functionalities short_string ss = const char*, ss (already defined) = const char* and const char* = ss (aldeady defined). char* can be used instead of const char*.
		- Added functions IsLetter(), IsNumber(), CopyString(), StringToInt(), ExtractSubstring()
		- Added a max length variable for short_string
		- Added [] operator to short_string
			
	- Time
		- Added date struct
		- Added GetDate(), DateToString()
		
v0.2.0
	Background
		- Added version numbers to individual libs & dlls
		- Split lib & dll files into separate version folders
		- Removed the need for macro linkage change when including .h files into their respective .cpp files
		- Added APAD_DLL macro to avoid having to recompile dlls when testing
		
	Array API
		- Added first iteration
		
  Error API
		- Added AssertRet() for use in functions where returning is preferable to exiting the process if an error is found
		- Renamed files from debug_error.* to error.*
		
	File API
		- Added basic functions FileExists(), LoadFile(), FreeFile(), IsValid(file), SaveFile()
		
	Memory API
		- Added stack allocation, pushing and deallocation
		- Added support for custom setting of maximum individual stack size for the client code (SetMaxStackCapacity())
		- Added stack validity checking to IsValid(memory_block)
		
	String API
		- Added assertions
		- Added ToString() for all available types
		- Added PushString()
		- Added StringsAreEqual()
		- Added FindSubstring()
		- Added ContainsAnySubstring()
		
	Win32 API
		- Added functions Win32FileExists(), Win32LoadFile() and Win32SaveFile()
		- Renamed all functions to have Win32 first for homogeneity
	
v0.1.1
	- Renamed build.bat to build_dll.bat and updated its contents
	- Replaced contents of debug Assert() with __debugbreak()
	- Removed all typedefs from memory.h and their use in memory.cpp

v0.1.0
	- Base types
	- Intrinsic macros
	- Debug assertions for internal use only and initial version of release assertions
	- Basic error setting, getting and clearing
	- Basic memory types and operations using custom win32 code
	  - Clearing, allocation, copying, deallocation, validation, setting as invalid
		- Casting and reading macros
	- String
		- GetStringLength()
	- Win32
		- Added ConsoleAppEntryPoint(), AllocateWin32Memory(), FreeWin32Memory()
